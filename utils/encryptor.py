from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from hashlib import sha256

# ЁЯФС AES рдХрдЮреНрдЬрд┐рдХрд╛ (derived from a Sanskrit phrase)
рдХреБрдЮреНрдЬрд┐рдХрд╛ = sha256('рд╕рдВрд╕реНрдХреГрддрд╕реБрд░рдХреНрд╖рд╛реерее'.encode('utf-8')).digest()[:16]

def рд╕рдЩреНрдХреЗрддрдп(рдкрд╛рдардГ: str) -> bytes:
    рдпрдиреНрддреНрд░рдГ = AES.new(рдХреБрдЮреНрдЬрд┐рдХрд╛, AES.MODE_CBC)
    рд╕рдВрдХреЗрддрд┐рддрдореН = рдпрдиреНрддреНрд░рдГ.encrypt(pad(рдкрд╛рдардГ.encode('utf-8'), AES.block_size))
    print("ЁЯФР рд╕рдЩреНрдХреЗрддрдирдВ рд╕рдореНрдкреВрд░реНрдгрдореНред")
    return рдпрдиреНрддреНрд░рдГ.iv + рд╕рдВрдХреЗрддрд┐рддрдореН

def рд╡рд┐рд╕рдЩреНрдХреЗрддрдп(рдбрд╛рдЯрд╛: bytes) -> str:
    рдЖрд░рдореНрднрдГ = рдбрд╛рдЯрд╛[:16]
    рдпрдиреНрддреНрд░рдГ = AES.new(рдХреБрдЮреНрдЬрд┐рдХрд╛, AES.MODE_CBC, рдЖрд░рдореНрднрдГ)
    рдореВрд▓рдореН = unpad(рдпрдиреНрддреНрд░рдГ.decrypt(рдбрд╛рдЯрд╛[16:]), AES.block_size)
    print("ЁЯУЬ рд╡рд┐рд╕рдЩреНрдХреЗрддрдирдВ рд╕рдореНрдкреВрд░реНрдгрдореНред")
    return рдореВрд▓рдореН.decode('utf-8')

# ЁЯза Aliases for import in devan_runner.py
encrypt = рд╕рдЩреНрдХреЗрддрдп
decrypt = рд╡рд┐рд╕рдЩреНрдХреЗрддрдп

# ЁЯзк Example usage
if __name__ == "__main__":
    рд╕рдиреНрджреЗрд╢рдГ = "рдирдорд╕реНрддреЗ рдЬрдЧрддреН"
    рд╕рдЩреНрдХреЗрддрд┐рддрдореН = encrypt(рд╕рдиреНрджреЗрд╢рдГ)
    рдкреНрд░рддрд┐рдлрд▓рдореН = decrypt(рд╕рдЩреНрдХреЗрддрд┐рддрдореН)
    print("ЁЯФП рдореВрд▓рдкрд╛рдардГ:", рдкреНрд░рддрд┐рдлрд▓рдореН)
