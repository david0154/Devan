from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad

рдХреБрдЮреНрдЬрд┐рдХрд╛ = b'рд╕рдВрд╕реНрдХреГрддрд╕реБрд░рдХреНрд╖рд╛реерее'  # AES рдХрдЮреНрдЬрд┐рдХрд╛ (16 рд╡рд░реНрдгрд╛рдирд┐)

def рд╕рдЩреНрдХреЗрддрдп(рдкрд╛рдардГ: str) -> bytes:
    рдпрдиреНрддреНрд░рдГ = AES.new(рдХреБрдЮреНрдЬрд┐рдХрд╛, AES.MODE_CBC)
    рд╕рдВрдХреЗрддрд┐рддрдореН = рдпрдиреНрддреНрд░рдГ.encrypt(pad(рдкрд╛рдардГ.encode(), AES.block_size))
    print("ЁЯФР рд╕рдЩреНрдХреЗрддрдирдВ рд╕рдореНрдкреВрд░реНрдгрдореНред")
    return рдпрдиреНрддреНрд░рдГ.iv + рд╕рдВрдХреЗрддрд┐рддрдореН

def рд╡рд┐рд╕рдЩреНрдХреЗрддрдп(рдбрд╛рдЯрд╛: bytes) -> str:
    рдЖрд░рдореНрднрдГ = рдбрд╛рдЯрд╛[:16]
    рдпрдиреНрддреНрд░рдГ = AES.new(рдХреБрдЮреНрдЬрд┐рдХрд╛, AES.MODE_CBC, рдЖрд░рдореНрднрдГ)
    рдореВрд▓рдореН = unpad(рдпрдиреНрддреНрд░рдГ.decrypt(рдбрд╛рдЯрд╛[16:]), AES.block_size)
    print("ЁЯУЬ рд╡рд┐рд╕рдЩреНрдХреЗрддрдирдВ рд╕рдореНрдкреВрд░реНрдгрдореНред")
    return рдореВрд▓рдореН.decode()
